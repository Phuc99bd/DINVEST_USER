[{"F:\\BCTN\\user-dev\\src\\index.js":"1","F:\\BCTN\\user-dev\\src\\App.js":"2","F:\\BCTN\\user-dev\\src\\serviceWorker.js":"3","F:\\BCTN\\user-dev\\src\\redux\\configureStore.js":"4","F:\\BCTN\\user-dev\\src\\redux\\reducers.js":"5","F:\\BCTN\\user-dev\\src\\redux\\sagas.js":"6","F:\\BCTN\\user-dev\\src\\redux\\middleware\\logger.js":"7","F:\\BCTN\\user-dev\\src\\redux\\status\\reducer.js":"8","F:\\BCTN\\user-dev\\src\\modules\\auth\\index.js":"9","F:\\BCTN\\user-dev\\src\\redux\\status\\constants.js":"10","F:\\BCTN\\user-dev\\src\\modules\\auth\\redux\\reducer.js":"11","F:\\BCTN\\user-dev\\src\\modules\\auth\\redux\\sagas.js":"12","F:\\BCTN\\user-dev\\src\\modules\\auth\\pages\\signin\\index.js":"13","F:\\BCTN\\user-dev\\src\\modules\\auth\\redux\\constants.js":"14","F:\\BCTN\\user-dev\\src\\modules\\auth\\redux\\actions.js":"15","F:\\BCTN\\user-dev\\src\\commons\\constants\\index.js":"16","F:\\BCTN\\user-dev\\src\\commons\\layouts\\index.js":"17","F:\\BCTN\\user-dev\\src\\commons\\layouts\\PublicLayout.js":"18","F:\\BCTN\\user-dev\\src\\commons\\layouts\\PrivateLayout.js":"19","F:\\BCTN\\user-dev\\src\\modules\\auth\\pages\\signup\\index.js":"20"},{"size":640,"mtime":1607535023223,"results":"21","hashOfConfig":"22"},{"size":2493,"mtime":1607537854717,"results":"23","hashOfConfig":"22"},{"size":5239,"mtime":1607537660640,"results":"24","hashOfConfig":"22"},{"size":779,"mtime":1607505306919,"results":"25","hashOfConfig":"22"},{"size":245,"mtime":1607505830355,"results":"26","hashOfConfig":"22"},{"size":175,"mtime":1607509470294,"results":"27","hashOfConfig":"22"},{"size":296,"mtime":1607503664502,"results":"28","hashOfConfig":"22"},{"size":542,"mtime":1607503566416,"results":"29","hashOfConfig":"22"},{"size":546,"mtime":1607536370761,"results":"30","hashOfConfig":"22"},{"size":73,"mtime":1607503566411,"results":"31","hashOfConfig":"22"},{"size":956,"mtime":1607508563293,"results":"32","hashOfConfig":"22"},{"size":5347,"mtime":1607509493214,"results":"33","hashOfConfig":"22"},{"size":4183,"mtime":1607526294395,"results":"34","hashOfConfig":"22"},{"size":470,"mtime":1607508563231,"results":"35","hashOfConfig":"22"},{"size":1040,"mtime":1607508562996,"results":"36","hashOfConfig":"22"},{"size":832,"mtime":1607527141866,"results":"37","hashOfConfig":"22"},{"size":133,"mtime":1607510357177,"results":"38","hashOfConfig":"22"},{"size":240,"mtime":1607526315223,"results":"39","hashOfConfig":"22"},{"size":3160,"mtime":1607522020289,"results":"40","hashOfConfig":"22"},{"size":7693,"mtime":1607536617500,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1kxg18z",{"filePath":"45","messages":"46","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},"F:\\BCTN\\user-dev\\src\\index.js",[],[],"F:\\BCTN\\user-dev\\src\\App.js",["86"],"import './App.css';\nimport React, {useEffect , useState } from \"react\";\n\nimport { IntlProvider } from \"react-intl\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\nimport {\n  SignInPage,\n  SignUpPage\n} from \"modules/auth\";\n\nimport { ROUTE , TOKEN } from \"commons/constants/index\";\n\nimport { PrivateLayout, PublicLayout } from \"commons/layouts\";\nimport { useDispatch } from 'react-redux';\nimport Cookies from \"js-cookie\";\n\nconst isLogin = () => {\n  const authToken = Cookies.get(TOKEN);\n  if (authToken) {\n    // fetchHelper.addDefaultHeader(\"Authorization\", `Bearer ${authToken}`);\n  }\n  return Boolean(authToken);\n};\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>{\n        console.log(props)\n        return   isLogin() ? (\n          <Redirect to={{ pathname: \"/\"}} />\n        ) : (\n          <PublicLayout {...rest}>\n            <Component {...props} />\n          </PublicLayout>\n        )}\n      }\n    />\n  );\n};\n\nconst PrivateRoute = ( Component, ...rest ) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        {\n          console.log(props)\n          return isLogin() ? (\n            <PrivateLayout {...rest}>\n              <Component {...props} />\n            </PrivateLayout>\n          ) : (\n            <Redirect\n            // cais nayf owr dau\n              to={{\n                pathname: `${ROUTE.LOGIN}`,\n                // state: { from: props.location },\n              }}\n            />\n          )\n        }\n       \n      }\n    />\n  );\n};\n\n\nfunction App() {\n  // const language = languageLocal || languageBrowser;\n  const [showLoading, setShowLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n\n      {showLoading && (\n        <div className=\"loader loading\">\n          <span>\n            <img\n              className=\"image-preloader\"\n              src={require(\"assets/images/loading/loader.svg\")}\n              alt=\"loading\"\n            />\n          </span>\n        </div>\n      )}\n      <IntlProvider>\n        <Router>\n\n          <PublicRoute exact path={ROUTE.LOGIN} component={SignInPage} />\n          <PublicRoute exact path={ROUTE.SIGNUP} component={SignUpPage} />\n\n        </Router>\n        {/* <AlertVerifyTransactionModal />\n        <AuthyModal /> */}\n      </IntlProvider>\n    </div>\n  );\n}\n\nexport default App;\n","F:\\BCTN\\user-dev\\src\\serviceWorker.js",[],"F:\\BCTN\\user-dev\\src\\redux\\configureStore.js",[],"F:\\BCTN\\user-dev\\src\\redux\\reducers.js",[],"F:\\BCTN\\user-dev\\src\\redux\\sagas.js",[],"F:\\BCTN\\user-dev\\src\\redux\\middleware\\logger.js",[],"F:\\BCTN\\user-dev\\src\\redux\\status\\reducer.js",[],"F:\\BCTN\\user-dev\\src\\modules\\auth\\index.js",[],"F:\\BCTN\\user-dev\\src\\redux\\status\\constants.js",[],"F:\\BCTN\\user-dev\\src\\modules\\auth\\redux\\reducer.js",[],"F:\\BCTN\\user-dev\\src\\modules\\auth\\redux\\sagas.js",[],"F:\\BCTN\\user-dev\\src\\modules\\auth\\pages\\signin\\index.js",[],"F:\\BCTN\\user-dev\\src\\modules\\auth\\redux\\constants.js",[],[],"F:\\BCTN\\user-dev\\src\\modules\\auth\\redux\\actions.js",[],"F:\\BCTN\\user-dev\\src\\commons\\constants\\index.js",[],"F:\\BCTN\\user-dev\\src\\commons\\layouts\\index.js",[],"F:\\BCTN\\user-dev\\src\\commons\\layouts\\PublicLayout.js",[],"F:\\BCTN\\user-dev\\src\\commons\\layouts\\PrivateLayout.js",[],"F:\\BCTN\\user-dev\\src\\modules\\auth\\pages\\signup\\index.js",["87","88","89"],"import React, { useEffect } from \"react\";\r\nimport { Card, Form, Input, Button, message } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport { ROUTE } from \"commons/constants\";\r\nimport * as actions from \"modules/auth/redux/actions\";\r\nimport \"./styles.scss\";\r\n\r\nconst SignUpPage = ({ history, location }) => {\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  const { setFieldsValue } = form;\r\n  const url = new URLSearchParams(location.search);\r\n  const sponsorKey = url.get(\"sponsorKey\") || url.get(\"sponsorkey\");\r\n  useEffect(() => {\r\n    if (!sponsorKey) return () => {};\r\n    setFieldsValue({\r\n      sponsorKey: sponsorKey.toLowerCase(),\r\n    });\r\n  }, [url, setFieldsValue]);\r\n\r\n  const isDisable = sponsorKey ? true : false;\r\n\r\n  const onFinish = (values) => {\r\n    const password = values?.password;\r\n    const confirmPassword = values?.confirm_password;\r\n    if (!password || !confirmPassword) {\r\n      message.warning(\"Invalid password\");\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      message.warning(\"Password and confirm password do not match\");\r\n      return;\r\n    }\r\n    delete values.confirm_password;\r\n    dispatch(\r\n      actions.postSignup(values, () => {\r\n        // history.push(ROUTE.LOGIN);\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-up-container\">\r\n      <div className=\"sign-up-box-container\">\r\n        <Card\r\n          title={<FormattedMessage id=\"auth.signup.modal.title\" />}\r\n          className=\"card-login-custom\"\r\n        >\r\n          <Form\r\n            form={form}\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            onFinish={onFinish}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                width: \"100%\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <div style={{ width: \"45%\" }}>\r\n                <label className=\"input-field-label\">\r\n                  <FormattedMessage id=\"auth.signup.modal.input.field.label.firstname\" />\r\n                  <span>\r\n                    {\" \"}\r\n                    <FormattedMessage id=\"auth.signin.modal.required.mark\" />\r\n                  </span>\r\n                </label>\r\n                <Form.Item\r\n                  name=\"first_name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: (\r\n                        <FormattedMessage id=\"auth.signup.modal.empty.message.firstname\" />\r\n                      ),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input className=\"input-field\" />\r\n                </Form.Item>\r\n              </div>\r\n\r\n              <div style={{ width: \"45%\" }}>\r\n                <label className=\"input-field-label\">\r\n                  <FormattedMessage id=\"auth.signup.modal.input.field.label.lastname\" />\r\n                  <span>\r\n                    {\" \"}\r\n                    <FormattedMessage id=\"auth.signin.modal.required.mark\" />\r\n                  </span>\r\n                </label>\r\n                <Form.Item\r\n                  name=\"last_name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: (\r\n                        <FormattedMessage id=\"auth.signup.modal.empty.message.lastname\" />\r\n                      ),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input className=\"input-field\" />\r\n                </Form.Item>\r\n              </div>\r\n            </div>\r\n\r\n            <label className=\"input-field-label\">\r\n              <FormattedMessage id=\"auth.signup.modal.input.field.label.email\" />\r\n              <span>\r\n                {\" \"}\r\n                <FormattedMessage id=\"auth.signin.modal.required.mark\" />\r\n              </span>\r\n            </label>\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  type: \"email\",\r\n                  message: (\r\n                    <FormattedMessage id=\"auth.signup.modal.empty.message.email\" />\r\n                  ),\r\n                },\r\n              ]}\r\n            >\r\n              <Input className=\"input-field\" />\r\n            </Form.Item>\r\n\r\n            <label className=\"input-field-label\">\r\n              <FormattedMessage id=\"auth.signup.modal.input.field.label.password\" />\r\n              <span>\r\n                {\" \"}\r\n                <FormattedMessage id=\"auth.signin.modal.required.mark\" />\r\n              </span>\r\n            </label>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: (\r\n                    <FormattedMessage id=\"auth.signup.modal.empty.message.password\" />\r\n                  ),\r\n                },\r\n              ]}\r\n            >\r\n              <Input className=\"input-field\" type=\"password\" />\r\n            </Form.Item>\r\n\r\n            <label className=\"input-field-label\">\r\n              <FormattedMessage id=\"auth.signup.modal.input.field.label.confirm.password\" />\r\n              <span>\r\n                {\" \"}\r\n                <FormattedMessage id=\"auth.signin.modal.required.mark\" />\r\n              </span>\r\n            </label>\r\n            <Form.Item\r\n              name=\"confirm_password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: (\r\n                    <FormattedMessage id=\"auth.signup.modal.empty.message.confirm.password\" />\r\n                  ),\r\n                },\r\n              ]}\r\n            >\r\n              <Input className=\"input-field\" type=\"password\" />\r\n            </Form.Item>\r\n\r\n            <label className=\"input-field-label\">\r\n              <FormattedMessage id=\"auth.signup.modal.input.field.label.sponsorKey\" />\r\n              <span>\r\n                {\" \"}\r\n                <FormattedMessage id=\"auth.signin.modal.required.mark\" />\r\n              </span>\r\n            </label>\r\n            <Form.Item\r\n              name=\"sponsorKey\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: (\r\n                    <FormattedMessage id=\"auth.signup.modal.empty.message.sponsorKey\" />\r\n                  ),\r\n                },\r\n              ]}\r\n            >\r\n              <Input className=\"input-field\" disabled={isDisable} />\r\n            </Form.Item>\r\n\r\n            <Form.Item className=\"action\">\r\n              <Button\r\n                size=\"middle\"\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"primary-button\"\r\n              >\r\n                <FormattedMessage id=\"auth.signin.modal.button.signup.label\" />\r\n              </Button>\r\n            </Form.Item>\r\n\r\n            <Form.Item className=\"action\">\r\n              <Link\r\n                className=\"forgot-button\"\r\n                to={`${ROUTE.FORGOT_PASSWORD}`.replace(\"//\", \"/\")}\r\n              >\r\n                <FormattedMessage id=\"auth.signin.modal.forgot.password.label\" />\r\n              </Link>\r\n              <Link\r\n                className=\"sign-up-link\"\r\n                to={`${ROUTE.LOGIN}`.replace(\"//\", \"/\")}\r\n              >\r\n                <FormattedMessage id=\"auth.signin.modal.login.label\" />\r\n              </Link>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n",{"ruleId":"90","severity":2,"message":"91","line":26,"column":24,"nodeType":"92","endLine":26,"endColumn":44},{"ruleId":"90","severity":2,"message":"93","line":11,"column":23,"nodeType":"92","endLine":11,"endColumn":30},{"ruleId":"90","severity":2,"message":"94","line":11,"column":32,"nodeType":"92","endLine":11,"endColumn":40},{"ruleId":"90","severity":2,"message":"95","line":15,"column":44,"nodeType":"96","endLine":15,"endColumn":50},"react/prop-types","'component' is missing in props validation","Property","'history' is missing in props validation","'location' is missing in props validation","'location.search' is missing in props validation","Identifier"]