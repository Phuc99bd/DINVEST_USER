@import "assets/css/variables";
@import "assets/css/mixin";

$listMarginTop: (
  mt-3: 3px,
  mt-5: 5px,
  mt-10: 10px,
  mt-20: 20px,
  mt-30: 30px,
  mt-40: 40px,
  mt-50: 50px,
  mt-60: 60px,
);

$listMarginBottom: (
  mb-10: 10px,
  mb-15: 15px,
  mb-20: 20px,
  mb-30: 30px,
  mb-40: 40px,
);

$listMarginLeft: (
  ml-5: 5px,
  ml-10: 10px,
  ml-20: 20px,
  ml-30: 30px,
  ml-40: 40px,
);
$listMarginRight: (
  mr-1: 1px,
  mr-2: 2px,
  mr-5: 5px,
  mr-7: 7px,
  mr-8: 8px,
  mr-10: 10px,
  mr-15: 15px,
  mr-20: 20px,
  mr-30: 30px,
  mr-40: 40px,
);

$listWidth: (
  w-10: 10px,
  w-20: 20px,
  w-30: 30px,
  w-40: 40px,
  w-10pc: 10%,
  w-20pc: 20%,
  w-30pc: 30%,
  w-100pc: 100%,
  w-10vw: 10vw,
  w-20vw: 20vw,
  w-30vw: 30vw,
);

$listHeight: (
  h-10: 10px,
  h-20: 20px,
  h-30: 30px,
  h-40: 40px,
);

$listPositionText: (
  t-center: center,
  t-right: right,
  t-left: left,
);

$listBorderRadius: (
  border-radius-5: 5px,
  border-radius-10: 10px,
  border-radius-15: 15px,
  border-radius-20: 20px,
);

@include create-class($attribute: "text-align", $list: $listPositionText);
@include create-class($attribute: "margin-top", $list: $listMarginTop);
@include create-class($attribute: "margin-bottom", $list: $listMarginBottom);
@include create-class($attribute: "margin-left", $list: $listMarginLeft);
@include create-class($attribute: "margin-right", $list: $listMarginRight);
@include create-class($attribute: "width", $list: $listWidth);
@include create-class($attribute: "height", $list: $listHeight);
@include create-class($attribute: "border-radius", $list: $listBorderRadius);

* {
  margin: 0;
  padding: 0;
}

.ant-layout {
  header {
    background-color: $aside-menu-color !important;
  }
  background-size: cover;
  background-repeat: no-repeat;
  background-position: bottom center;
  min-height: 100vh;
  background-image: url("../../assets/images/bg.jpg");
  color: #fff;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: bottom center;
  background-color: $aside-menu-background;
}
body {
  font-family: $base-font;
  font-size: 16px;
  .ant-card {
    border-radius: 5px;
  }
  ::-webkit-scrollbar {
    height: 5px;
    cursor: pointer;
  }
  /* Track */
  ::-webkit-scrollbar-track {
    background: #f1f1f1;
  }
  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: #888;
  }
  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: #555;
  }
}

.progress-wrapper {
  height: 0.2rem;
  .loader-60devs {
    z-index: 10051;
  }
  .loader-60devs .loader-60devs-progress {
    height: 0.2rem;
    width: 100%;
    background-color: $aside-menu-background;
  }
  .loader-60devs::before {
    display: none;
  }
}

// label custom css
.label-custom {
  margin-bottom: 9px;
  color: rgba(0, 0, 0, 0.85);
  .label-require::before {
    display: inline-block;
    margin-right: 4px;
    color: #ff4d4f;
    font-size: 14px;
    font-family: $base-font;
    line-height: 1;
    content: "*";
  }
}

// loading
.loader {
  position: fixed;
  background: rgba(181, 188, 199, 0.4);
  z-index: 9999;
  margin: 0 auto;
  width: 100%;
  height: 100vh;

  display: -webkit-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;

  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-justify-content: center;
  -ms-justify-content: center;
  justify-content: center;
  align-items: center;
}

.image-loading {
  width: 207.35px;
}

.image-preloader {
  width: 150px;
  animation: spin 1s infinite linear;
  -webkit-animation: spin 1s infinite linear;
}

@-moz-keyframes spin {
  100% {
    -moz-transform: rotate(360deg);
  }
}
@-webkit-keyframes spin {
  100% {
    -webkit-transform: rotate(360deg);
  }
}
@keyframes spin {
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

.ant-modal-content {
  border-radius: 6px;
  background: $modal-background;
  overflow: hidden;
}

.ant-modal-header {
  background: unset; //$modal-background-header-color;
}

.ant-modal-body {
  padding: 15px 24px 14px !important;
  .ant-select-selector,
  input {
    height: 36px !important;
    border-radius: 4px;
  }
  .lable,
  .lable-form {
    font-size: 15px;
    margin-bottom: 7px;
    color: #fff;
  }
  .btn-confirm {
    margin-top: 17px;
    text-align: center;
    border-radius: 6px;
    background-color: $modal-background-header-color;
    box-shadow: 0 0 15px $modal-background-header-color;
    cursor: pointer;
    button {
      padding: 2px 10px;
      color: #fff;
      height: 100%;
      font-size: 27px;
      background: unset;
      border: unset;
      &:valid,
      &:hover,
      &:active {
        overflow: hidden;
      }
    }
  }
}

.ant-modal-footer {
  padding: 10px 24px 10px !important;
  cursor: pointer;
  border: unset;
  button {
    color: #fff;
    font-size: inherit;
    text-align: center;
    background-color: $modal-background-header-color;
    padding: 0;
    height: unset;
    border: unset;
    outline: unset;
    cursor: pointer;
    &:active,
    &:focus,
    &:valid,
    &:hover {
      color: inherit;
      background-color: inherit !important;
    }
  }
  .modal-footer-label {
    color: #fff;
    font-size: 15px;
    text-align: center;
    padding: 5px 15px;
    margin-top: 0px !important;
    border: #fff 1px solid;
    border-radius: 5px;
    background: $btn-gradient;
  }
}

.ant-input {
  border-radius: 4px;
}

.text-success-color {
  color: $success-color;
}

// hidden on mobile
@media only screen and (max-width: 1170px) {
  .hidden-on-mobile {
    display: none;
  }
}

.table-ant-custom {
  .ant-table-content {
    overflow: auto;
  }
}

.pega-content-title {
  font-family: $base-font;
  font-size: 30px;
  color: #fff;
  margin-bottom: 25px;
}

.ant-card-bordered {
  border: none;
}

.custom-modal {
  .ant-modal-content {
    border: none;
  }
}

.transfer-custom {
  .ant-modal-content {
    border: none;
  }
}

.ant-card-body {
  padding: 0;
}

.ant-card-head {
  border-bottom: none;
}

.cusor-not-allowed {
  cursor: not-allowed !important;
}
